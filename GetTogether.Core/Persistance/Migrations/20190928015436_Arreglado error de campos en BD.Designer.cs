// <auto-generated />
using System;
using GetTogether.Core.Persistance.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GetTogether.Core.Persistance.Migrations
{
    [DbContext(typeof(AppDbcontext))]
    [Migration("20190928015436_Arreglado error de campos en BD")]
    partial class ArregladoerrordecamposenBD
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GetTogether.Data.Models.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)")
                        .HasMaxLength(250);

                    b.Property<int>("NumeroEmpleado")
                        .HasColumnType("INT");

                    b.Property<int>("Rol")
                        .HasColumnType("INT");

                    b.HasKey("IdEmpleado");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("GetTogether.Data.Models.Lugar", b =>
                {
                    b.Property<int>("IdLugar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DireccionLugar")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime>("FechaLugar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2019, 9, 27, 20, 54, 35, 806, DateTimeKind.Local).AddTicks(7226));

                    b.Property<DateTime>("FechaLugarModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2019, 9, 27, 20, 54, 35, 823, DateTimeKind.Local).AddTicks(4647));

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)")
                        .HasMaxLength(250);

                    b.Property<string>("NombreLugar")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)")
                        .HasMaxLength(250);

                    b.HasKey("IdLugar");

                    b.ToTable("Lugares");
                });

            modelBuilder.Entity("GetTogether.Data.Models.OpcionComida", b =>
                {
                    b.Property<int>("IdOpcion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Costo")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)")
                        .HasMaxLength(250);

                    b.Property<DateTime>("FechaOpcion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2019, 9, 27, 20, 54, 35, 827, DateTimeKind.Local).AddTicks(9914));

                    b.Property<DateTime>("FechaOpcionModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2019, 9, 27, 20, 54, 35, 828, DateTimeKind.Local).AddTicks(1121));

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)")
                        .HasMaxLength(250);

                    b.Property<int>("LugarId");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)")
                        .HasMaxLength(250);

                    b.HasKey("IdOpcion");

                    b.HasIndex("LugarId");

                    b.ToTable("OpcionesComida");
                });

            modelBuilder.Entity("GetTogether.Data.Models.Votacion", b =>
                {
                    b.Property<int>("IdVotacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmpleadoId");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2019, 9, 27, 20, 54, 35, 829, DateTimeKind.Local).AddTicks(252));

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValue(new DateTime(2019, 9, 27, 20, 54, 35, 828, DateTimeKind.Local).AddTicks(9268));

                    b.Property<int>("OpcionComidaId");

                    b.Property<int>("RegistroActivo");

                    b.HasKey("IdVotacion");

                    b.HasIndex("EmpleadoId")
                        .IsUnique();

                    b.HasIndex("OpcionComidaId");

                    b.ToTable("Votaciones");
                });

            modelBuilder.Entity("GetTogether.Data.Models.OpcionComida", b =>
                {
                    b.HasOne("GetTogether.Data.Models.Lugar")
                        .WithMany("OpcionesComida")
                        .HasForeignKey("LugarId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GetTogether.Data.Models.Votacion", b =>
                {
                    b.HasOne("GetTogether.Data.Models.Empleado", "Empleado")
                        .WithOne()
                        .HasForeignKey("GetTogether.Data.Models.Votacion", "EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GetTogether.Data.Models.OpcionComida", "OpcionComida")
                        .WithMany()
                        .HasForeignKey("OpcionComidaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
